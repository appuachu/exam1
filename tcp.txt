TCP server 

# include<stdio.h> 
# include<string.h> 
# include<sys/socket.h> 
# include<stdlib.h> 
# include<netdb.h> 
int main() 
{ 
 int serversocket,clientsocket,port; 
 struct sockaddr_in serveraddr,clientaddr; 
 socklen_t len; 
 char message[50]; 
 struct serveraddr; 
 
serversocket=socket(AF_INET,SOCK_STR
EAM,0); 
 
bzero((char*)&serveraddr,sizeof(serveraddr)
); 
 serveraddr.sin_family=AF_INET; 
 printf("Enter the port number "); 
 scanf("%d",&port); 
 serveraddr.sin_port=htons(port); 
 
serveraddr.sin_addr.s_addr=INADDR_ANY
; 
 bind(serversocket,(struct 
sockaddr*)&serveraddr,sizeof(serveraddr)); 
bzero((char*)&clientaddr,sizeof(clientaddr))
; 
 len=sizeof(clientaddr); 
 listen(serversocket,5); 
 printf("\nWaiting for client 
connection\n");printf("\nhai:"); 
 clientsocket=accept(serversocket,(struct 
sockaddr*)&clientaddr,&len); 
 printf("\nClient connectivity received.\n"); 
 printf("\nReading message from the 
client.\n"); 
 
read(clientsocket,message,sizeof(message)); 
 printf("\nThe client has sent.%s",message); 
 printf("\nSending message to the 
client.\n"); 
 write(clientsocket,"YOUR MESSAGE 
RECEIVED.",sizeof("YOUR MESSAGE 
RECEIVED.")); 
 close(clientsocket); 
 close(serversocket); 
}



TCP client 

#include<stdio.h> 
#include<sys/types.h> 
#include<netinet/in.h> 
#include<netdb.h> 
#include<strings.h> 
int main() 
{ 
 int clientsocket,port; 
 struct sockaddr_in serveraddr; 
 socklen_t len; 
 char message[50]; 
 
clientsocket=socket(AF_INET,SOCK_STR
EAM,0); 
 
bzero((char*)&serveraddr,sizeof(serveraddr)
); 
 len=sizeof(serveraddr); 
 serveraddr.sin_family=AF_INET; 
 printf("Enter the port number "); 
 scanf("%d",&port); 
 serveraddr.sin_port=htons(port); 
 printf("\nTrying to connect to the 
server.\n"); 
 connect(clientsocket,(struct 
sockaddr*)&serveraddr,sizeof(serveraddr)); 
 printf("\nConnected to the server.\n"); 
 printf("\nSending message for server 
connection"); 
 send(clientsocket,"HI,IAM 
CLIENT...",sizeof("HI,IAM CLIENT..."),0); 
 printf("\nReceiving message from 
server.\n"); 
 
recv(clientsocket,message,sizeof(message),0
); 
 printf("\nMessage 
received.\t%s\n",message); 
 close(clientsocket); 
} 
